[project]
name = "paper2poster"
version = "1.0.0"
description = "Multimodal Poster Automation from Scientific Papers"
authors = [
    {name = "Wei Pang", email = "wei.pang@eng.ox.ac.uk"},
    {name = "Kevin Qinghong Lin"},
    {name = "Xiangru Jian"},
    {name = "Xi He"},
    {name = "Philip Torr"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
keywords = ["ai", "multimodal", "poster", "automation", "scientific-papers"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
]

dependencies = [
    # Core packages from requirements.txt (flexible versions)
    "accelerate",
    "agentops>=0.3.0",
    "aiofiles>=24.0.0",
    "aiohttp>=3.11.0",
    "anthropic>=0.42.0",
    "beautifulsoup4>=4.12.0",
    "bibtexparser>=1.4.0", 
    "black>=25.1.0",
    "click>=8.1.0",
    "cohere>=5.13.0",
    "colorama>=0.4.6",
    "coloredlogs>=15.0.0",
    "datasets>=3.2.0",
    "diffusers>=0.25.0",
    "duckdb>=1.1.0",
    "easyocr",
    "einops>=0.8.0",
    "evaluate>=0.4.0",
    "fastapi>=0.115.0",
    "firecrawl-py>=1.6.0",
    "google-generativeai>=0.6.0",
    "httpx>=0.27.0",
    "httptools>=0.6.0",
    "huggingface-hub>=0.27.0",
    "imageio>=2.37.0", 
    "ipython>=8.31.0",
    "jinja2>=3.1.0",
    "joblib>=1.4.0",
    "json-repair>=0.35.0",
    "jsonlines>=3.1.0",
    "jsonschema>=4.23.0",
    "jupyter>=1.1.0",
    "langchain>=0.3.17",
    "langchain-community>=0.3.16",
    "langchain-core>=0.3.33",
    "langchain-openai>=0.3.3",
    "langchain-text-splitters>=0.3.5",
    "langdetect>=1.0.9",
    "langsmith>=0.3.3",
    # "litellm>=1.59.0",  # Has strict httpx constraints
    "lxml>=5.3.0",
    "markdown>=3.7",
    "markdownify>=0.13.0",
    "matplotlib>=3.10.0",
    "mistralai>=1.8.1",
    "mistral-common>=1.5.1",
    "nltk>=3.9.0",
    "numpy>=1.26.0",
    "openai>=1.59.0",
    "opencv-python>=4.11.0",
    "openpyxl>=3.1.0",
    "orjson>=3.10.0",
    "pandas>=2.0.0",
    "pdf2image>=1.17.0", 
    "pdfminer.six>=20231228",
    "pdfplumber>=0.11.0",
    "pdftext>=0.4.0",
    "pillow>=10.4.0",
    "plotly>=6.0.0",
    "psutil>=6.0.0",
    "pydantic>=2.10.3",
    "pydantic-settings>=2.7.0",
    "pymupdf>=1.23.0",
    "pypdf>=5.2.0",
    "pytest>=8.3.0",
    "python-dateutil>=2.9.0",
    "python-docx>=1.1.0",
    "python-dotenv>=1.0.0",
    "pytesseract>=0.3.0",
    "pytz>=2024.2",
    "pyyaml>=6.0.0",
    "requests>=2.32.0",
    "rouge>=1.0.0",
    "ruff>=0.7.0",
    "scikit-image>=0.25.0",
    "scikit-learn>=1.6.0",
    "scipy>=1.15.0",
    "tenacity>=8.2.0",
    "torch",
    "torchvision",
    "transformers>=4.48.0",
    "tqdm>=4.67.0",
    "uvicorn",
    "yfinance>=0.2.52",
    # Excluded problematic packages:
    # "sentencepiece",  # Build fails on Python 3.13
    # "FlagEmbedding",  # Depends on sentencepiece
    # "openbb",  # Dependency conflicts
]

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "ruff>=0.7.4",
    "mypy",
]

extended = [
    # Additional packages to be added later incrementally
    "cohere>=5.13.11",
    "google-generativeai>=0.6.0",
    "langchain>=0.3.17",
    "scipy>=1.11.0",
    "scikit-learn>=1.4.0",
    "plotly>=5.17.0",
]

[project.urls]
Homepage = "https://paper2poster.github.io/"
Repository = "https://github.com/Paper2Poster/Paper2Poster"
Documentation = "https://paper2poster.github.io/"
"Bug Reports" = "https://github.com/Paper2Poster/Paper2Poster/issues"
"Research Paper" = "https://arxiv.org/abs/2505.21497"

[project.scripts]
paper2poster = "PosterAgent.new_pipeline:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["PosterAgent*", "camel*", "docling*", "utils*"]

[tool.uv]
dev-dependencies = [
    "black>=25.1.0",
    "ruff>=0.7.4",
    "mypy",
]

[tool.ruff]
line-length = 79
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"**/tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.black]
line-length = 79
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
    "PosterAgent/tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
] 
